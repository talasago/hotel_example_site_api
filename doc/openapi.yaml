---
openapi: 3.0.3
info:
  title: APIテスト自動化学習用API
  description: |-
    /auth または /auth/sign_inを呼び出し、Response headersの値をAuthorizeボタン入力後の画面に入力すると、
    各API呼び出し時、ログイン中の状態とみなして処理します。
  version: 0.1.0
servers:
  - url: http://localhost:3000/api/v1
tags:
  - name: Auth
    description: ログインやログアウト操作するAPI
  - name: User
    description: ユーザーを操作するAPI
  - name: Plan
    description: 宿泊プランを操作するAPI
  - name: Reserve
    description: 宿泊予約を操作するAPI

components:
  securitySchemes:
    access-token:
      type: apiKey
      name: access-token
      in: header
    client:
      type: apiKey
      name: client
      in: header
    uid:
      type: apiKey
      name: uid
      in: header
paths:
  /mypage:
    get:
      summary: ログイン中のユーザーの情報を返します
      tags:
      - User
      security:
      - client: []
        access-token: []
        uid: []
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  email:
                    type: string
                  rank:
                    type: string
                  address:
                    nullable: true
                  tel:
                    nullable: true
                    type: string
                  gender:
                    type: string
                  birthday:
                    nullable: true
                    type: string
                  notification:
                    type: boolean
              example:
                address: hoge県fuga市piyo1-3-4
                tel: "08000000000"
                birthday: 1989/01/01
                username: TestUser
                email: test3@example.com
                rank: premium
                gender: unregistered
                notification: false
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
              example:
                errors:
                - You need to sign in or sign up before continuing.
    delete:
      summary: ユーザーを削除します
      tags:
      - User
      security:
      - client: []
        access-token: []
        uid: []
      responses:
        '204':
          description: 成功
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
              example:
                errors:
                - You need to sign in or sign up before continuing.
        '403':
          description: 削除不可(ユーザーID=1~4は削除不可)
  /auth/sign_in:
    post:
      summary: ログイン(サインイン)し、ログイン状態に必要なaccess-tokenとclientとuidを返します
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
            example:
              email: ichiro@example.com
              password: password
      responses:
        '200':
          description: 成功
          headers:
            access-token:
              schema:
                type: string
            client:
              schema:
                type: string
            uid:
              schema:
                type: string
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      type: string
              example:
                success: false
                errors:
                - Invalid login credentials. Please try again.
  /plans:
    get:
      summary: 宿泊プランの一覧を返します。未ログイン(リクエストヘッダ未設定)の場合、誰でも予約可能なプランを返します。ログイン済み(リクエストヘッダ設定済)の場合、ログインユーザーのランクに応じた予約可能プランを返します。
      tags:
      - Plan
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  plans:
                    type: array
                    items:
                      type: object
                      properties:
                        plan_id:
                          type: integer
                        plan_name:
                          type: string
                        room_bill:
                          type: integer
                        min_head_count:
                          type: integer
                        only:
                          type: string
                          nullable: true
                        room_category_type_name:
                          type: string
                          nullable: true
              example:
                plans:
                - plan_id: 0
                  plan_name: お得な特典付きプラン
                  room_bill: 7000
                  min_head_count: 1
                  only:
                  room_category_type_name: スタンダードツイン
                - plan_id: 2
                  plan_name: ディナー付きプラン
                  room_bill: 8500
                  min_head_count: 1
                  only: normal
                  room_category_type_name:
                - plan_id: 3
                  plan_name: お得なプラン
                  room_bill: 6000
                  min_head_count: 1
                  only: normal
                  room_category_type_name:
                - plan_id: 4
                  plan_name: 素泊まり
                  room_bill: 5500
                  min_head_count: 1
                  only:
                  room_category_type_name: シングル
                - plan_id: 5
                  plan_name: 出張ビジネスプラン
                  room_bill: 7500
                  min_head_count: 1
                  only:
                  room_category_type_name: シングル
                - plan_id: 6
                  plan_name: エステ・マッサージプラン
                  room_bill: 9000
                  min_head_count: 1
                  only:
                  room_category_type_name:
                - plan_id: 7
                  plan_name: 貸し切り露天風呂プラン
                  room_bill: 9000
                  min_head_count: 1
                  only:
                  room_category_type_name:
                - plan_id: 8
                  plan_name: カップル限定プラン
                  room_bill: 8000
                  min_head_count: 2
                  only:
                  room_category_type_name: プレミアムツイン
                - plan_id: 9
                  plan_name: テーマパーク優待プラン
                  room_bill: 10000
                  min_head_count: 1
                  only:
                  room_category_type_name:
  /plan/{plan_id}:
    get:
      summary: 宿泊予約用に、宿泊プランの詳細を返します。未ログイン(リクエストヘッダ未設定)の場合、誰でも予約可能なプランのIDを指定すると成功します。ログイン済み(リクエストヘッダ設定済)の場合、ログインユーザーのランクに応じた予約可能プランのIDを指定すると成功します。
      tags:
      - Plan
      parameters:
      - name: plan_id
        in: path
        required: true
        schema:
          type: integer
        example: 0
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  plan:
                    type: object
                    properties:
                      plan_id:
                        type: integer
                      plan_name:
                        type: string
                      room_bill:
                        type: integer
                      min_head_count:
                        type: integer
                      max_head_count:
                        type: integer
                      min_term:
                        type: integer
                      max_term:
                        type: integer
                  room_type:
                    nullable: true
                    type: object
                    properties:
                      room_type_name:
                        type: string
                      min_capacity:
                        type: integer
                      max_capacity:
                        type: integer
                      room_size:
                        type: integer
                      facilities:
                        type: array
                        items:
                          type: string
                      room_category_type_name:
                        type: string
                  user:
                    nullable: true
                    type: object
                    properties:
                      user_name:
                        type: string
                      tel:
                        type: string
                        nullable: true
                      email:
                        type: string
                      username:
                        type: string
              example:
                plan:
                  plan_id: 3
                  plan_name: お得なプラン
                  room_bill: 6000
                  min_head_count: 1
                  max_head_count: 9
                  min_term: 1
                  max_term: 9
                room_type:
                  room_type_name: スタンダードツイン
                  min_capacity: ツイン
                  max_capacity: 1
                  room_size: 2
                  facilities: 18
                  room_category_type_name: ['ユニット式バス・トイレ', '独立洗面台']
                user:
                  username: 松本さくら
                  tel:
                  email: sakura@example.com
        '401':
          description: 認証エラー
  /auth:
    post:
      summary: ユーザーを作成し、ログイン状態に必要なaccess-tokenとclientとuidを返します
      tags:
      - Auth
      - User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                username:
                  type: string
                rank:
                  type: string
                address:
                  type: string
                tel:
                  type: string
                gender:
                  type: integer
                birthday:
                  type: string
                notification:
                  type: boolean 
            example:
              email: test9@example.com
              password: password
              username: TestUser
              rank: normal
              address: HOGE県
              tel: '00000000000'
              gender: 9
              birthday: '1989/12/30'
              notification: true
      responses:
        '200':
          description: 成功
        '422':
          description: 登録失敗
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        nullable: true
                      provider:
                        type: string
                      uid:
                        type: string
                      allow_password_change:
                        type: boolean
                      username:
                        nullable: true
                        type: string
                      nickname:
                        nullable: true
                      image:
                        nullable: true
                      email:
                        nullable: true
                        type: string
                      created_at:
                        nullable: true
                      updated_at:
                        nullable: true
                      rank:
                        type: string
                      address:
                        type: string
                      tel:
                        type: string
                      gender:
                        type: integer
                      birthday:
                        type: string
                      notification:
                        type: boolean
                  errors:
                    type: array
                    properties:
                      password:
                        type: array
                        items:
                          type: string
                      email:
                        type: array
                        items:
                          type: string
                      username:
                        type: array
                        items:
                          type: string
                      full_messages:
                        type: array
                        items:
                          type: string
                    items:
                      type: string
                  success:
                    type: boolean
              example:
                status: error
                data:
                  id:
                  provider: email
                  uid: ''
                  allow_password_change: false
                  username: TestUser
                  nickname:
                  image:
                  email: test10@example.com
                  created_at:
                  updated_at:
                  rank: normal
                  address: HOGE県
                  tel: '00000000000'
                  gender: 9
                  birthday: '1989-12-30'
                  notification: true
                errors:
                - Please submit proper sign up data in request body.
                success: false
  /reserve:
    post:
      summary: 宿泊予約を仮登録します
      tags:
      - Reserve
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                plan_id:
                  type: integer
                total_bill:
                  type: integer
                date:
                  type: string
                term:
                  type: string
                head_count:
                  type: string
                breakfast:
                  type: boolean
                early_check_in:
                  type: boolean
                sightseeing:
                  type: boolean
                username:
                  type: string
                contact:
                  type: string
                comment:
                  nullable: true
                  type: string
                tel:
                  nullable: true
                  type: string
                email:
                  nullable: true
                  type: string
            example:
              plan_id: 2
              total_bill: 13625
              date: '2023/01/08'
              term: '1'
              head_count: '1'
              breakfast: 'true'
              early_check_in: 'true'
              sightseeing: 'true'
              username: テスト太郎
              contact: email
              comment: comment_test
              tel: '09000000000'
              email: example@example.com
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_bill:
                    type: integer
                  term:
                    type: integer
                  head_count:
                    type: integer
                  username:
                    type: string
                  breakfast:
                    type: boolean
                  early_check_in:
                    type: boolean
                  sightseeing:
                    type: boolean
                  contact:
                    type: string
                  email:
                    nullable: true
                    type: string
                  tel:
                    nullable: true
                    type: string
                  comment:
                    type: string
                  session_token:
                    type: string
                  plan_name:
                    type: string
                  reserve_id:
                    type: integer
                  start_date:
                    type: string
                  end_date:
                    type: string
              example:
                reserve_id: 692
                total_bill: 13625
                term: 1
                head_count: 1
                username: テスト太郎
                breakfast: true
                early_check_in: true
                sightseeing: true
                contact: email
                email: example@example.com
                tel:
                comment: comment_test
                session_token: 8677lh607OzRID1UjFIiNg==
                plan_name: ディナー付きプラン
                start_date: 2023/01/08
                end_date: 2023/01/09
        '400':
          description: リクエストのパラメータが不正
        '401':
          description: 認証エラー
  /reserve/{reserve_id}:
    post:
      summary: 宿泊予約を本登録します
      tags:
      - Reserve
      parameters:
      - name: reserve_id
        in: path
        required: true
        schema:
          type: integer
        example: 694
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                session_token:
                  type: string
            example:
              session_token: hogehogehoge
      responses:
        '200':
          description: 成功
        '400':
          description: リクエストのパラメータが不正
        '404':
          description: 指定されたデータが非存在
        '409':
          description: リクエストのデータが現在の状態と競合
  /auth/sign_out:
    delete:
      summary: ログアウトし、ログイン情報(access-tokenとclientとuid)を無効化します
      tags:
      - Auth
      security:
      - client: []
        access-token: []
        uid: []
      responses:
        '200':
          description: 成功
        '404':
          description: 指定されたデータが非存在
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      type: string
              example:
                success: false
                errors:
                - User was not found or was not logged in.
