---
openapi: 3.0.3
info:
  title: テスト自動化練習用API
  description: |
    テスト自動化の学習用練習サイト(https://hotel.testplanisphere.dev/ja/index.html)を模倣した、WebAPI(システムの内部向けAPI)の仕様書です。
    /auth または /auth/sign_inを呼び出し、Response headersの値をAuthorizeボタン入力後の画面に入力すると、各API呼び出し時にログイン状態とみなして処理します。
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/v1
tags:
  - name: Auth
    description: ログインやログアウト操作するAPI
  - name: User
    description: ユーザーを操作するAPI
  - name: Plan
    description: 宿泊プランを操作するAPI
  - name: Reserve
    description: 宿泊予約を操作するAPI
components:
  securitySchemes:
    access-token:
      type: apiKey
      name: access-token
      in: header
    client:
      type: apiKey
      name: client
      in: header
    uid:
      type: apiKey
      name: uid
      in: header
  schemas:
    User:
      type: object
      required:
        - username
        - email
        - rank
        - gender
        - password
      properties:
        username:
          type: string
          description: ユーザー名
        email:
          type: string
          description: メールアドレス
          format: /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/
        password:
          type: string
          description: パスワード
        rank:
          type: string
          description: 会員ランク 'premium'→プレミアム会員 'normal'→一般会員
        address:
          type: string
          description: 住所
          nullable: true
        tel:
          type: string
          description: 電話番号
          maxLength: 11
          nullable: true
        gender:
          type: integer
          description: 性別 0→回答しない 1→男性 2→女性 9→その他
        birthday:
          type: string
          description: 生年月日
          nullable: true
        notification:
          type: boolean
          description: お知らせを受け取る
          default: false
    Plan:
      type: object
      properties:
        plan_id:
          type: integer
          description: プランID
        plan_name:
          type: string
          description: プラン名
        room_bill:
          type: integer
          description: 1泊あたりの料金
        min_head_count:
          type: integer
          description: 最低宿泊人数
        max_head_count:
          type: integer
          description: 最大宿泊人数
        min_term:
          type: integer
          description: 最低宿泊日数
        max_term:
          type: integer
          description: 最大宿泊日数
definitions:
  userForMypage:
    type: object
    properties:
      user:
        type: object
        properties:
          username:
            type: string
            description: ユーザー名
          email:
            type: string
            description: メールアドレス
            format: /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/
          rank:
            type: string
            description: 会員ランク 'premium'→プレミアム会員 'normal'→一般会員
          address:
            type: string
            description: 住所
            nullable: true
          tel:
            type: string
            description: 電話番号
            maxLength: 11
            nullable: true
          gender:
            type: integer
            description: 性別 0→回答しない 1→男性 2→女性 9→その他
          birthday:
            type: string
            description: 生年月日
            nullable: true
          notification:
            type: boolean
            description: お知らせを受け取る
            default: false
  UserForPlan:
    nullable: true
    type: object
    properties:
      username:
        type: string
        description: ユーザー名
      tel:
        type: string
        description: 電話番号
        maxLength: 11
        nullable: true
      email:
        type: string
        description: メールアドレス
        format: /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/
  SignInParams:
    type: object
    properties:
      email:
        type: string
        description: メールアドレス
        format: /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/
      password:
        type: string
        description: パスワード
  plans:
    type: array
    items:
      type: object
      properties:
        plan_id:
          type: integer
          description: プランID
        plan_name:
          type: string
          description: プラン名
        room_bill:
          type: integer
          description: 1泊あたりの料金
        min_head_count:
          type: integer
          description: 最低宿泊人数
        only:
          type: string
          description: 限定 #TODO:追加で書く。
        room_category_type_name:
          type: integer
          description: 部屋
          example: '"スタンダードツイン"、"シングル"、"プレミアムツイン"、"部屋指定なし"'
paths:
  /mypage:
    get:
      summary: ログイン中のユーザーの情報を返します
      tags:
      - User
      security:
      - client: []
        access-token: []
        uid: []
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/definitions/userForMypage'
              example:
                message: 'Get completed.'
                data:
                  address: hoge県fuga市piyo1-3-4
                  tel: "08000000000"
                  birthday: 1989/01/01
                  username: TestUser
                  email: test3@example.com
                  rank: premium
                  gender: unregistered
                  notification: false
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: You need to sign in or sign up before continuing.
    delete:
      summary: ユーザーを削除します
      tags:
      - User
      security:
      - client: []
        access-token: []
        uid: []
      responses:
        '204':
          description: 成功
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: You need to sign in or sign up before continuing.
        '403':
          description: 削除不可(ユーザーID=1~4は削除不可)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: Users with IDs 1~4 cannot delete.
  /auth/sign_in:
    post:
      summary: ログイン(サインイン)し、ログイン状態に必要なaccess-tokenとclientとuidを返します
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/SignInParams'
            example:
              email: ichiro@example.com
              password: password
      responses:
        '200':
          description: 成功
          headers:
            access-token:
              schema:
                type: string
            client:
              schema:
                type: string
            uid:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: Create completed.
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: Invalid login credentials. Please try again.
  /plans:
    get:
      summary: 宿泊プランの一覧を返します。未ログイン(リクエストヘッダ未設定)の場合、誰でも予約可能なプランを返します。ログイン済み(リクエストヘッダ設定済)の場合、ログインユーザーのランクに応じた予約可能プランを返します。
      tags:
      - Plan
      security:
      - client: []
        access-token: []
        uid: []
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      plans:
                        $ref: '#/definitions/plans'
              example:
                message: 'Get completed.'
                data:
                  plans:
                  - plan_id: 0
                    plan_name: お得な特典付きプラン
                    room_bill: 7000
                    min_head_count: 1
                    only: null
                    room_category_type_name: スタンダードツイン
                  - plan_id: 2
                    plan_name: ディナー付きプラン
                    room_bill: 8500
                    min_head_count: 1
                    only: normal
                    room_category_type_name: null
                  - plan_id: 3
                    plan_name: お得なプラン
                    room_bill: 6000
                    min_head_count: 1
                    only: normal
                    room_category_type_name:
                  - plan_id: 4
                    plan_name: 素泊まり
                    room_bill: 5500
                    min_head_count: 1
                    only: null
                    room_category_type_name: シングル
                  - plan_id: 5
                    plan_name: 出張ビジネスプラン
                    room_bill: 7500
                    min_head_count: 1
                    only: null
                    room_category_type_name: シングル
                  - plan_id: 6
                    plan_name: エステ・マッサージプラン
                    room_bill: 9000
                    min_head_count: 1
                    only: null
                    room_category_type_name:
                  - plan_id: 7
                    plan_name: 貸し切り露天風呂プラン
                    room_bill: 9000
                    min_head_count: 1
                    only: null
                    room_category_type_name:
                  - plan_id: 8
                    plan_name: カップル限定プラン
                    room_bill: 8000
                    min_head_count: 2
                    only: null
                    room_category_type_name: プレミアムツイン
                  - plan_id: 9
                    plan_name: テーマパーク優待プラン
                    room_bill: 10000
                    min_head_count: 1
                    only: null
                    room_category_type_name: null
  /plan/{plan_id}:
    get:
      summary: 宿泊予約用に、宿泊プランの詳細を返します。未ログイン(リクエストヘッダ未設定)の場合、誰でも予約可能なプランのIDを指定すると成功します。ログイン済み(リクエストヘッダ設定済)の場合、ログインユーザーのランクに応じた予約可能プランのIDを指定すると成功します。
      tags:
      - Plan
      security:
      - client: []
        access-token: []
        uid: []
      parameters:
      - name: plan_id
        in: path
        required: true
        schema:
          type: integer
        example: 0
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      plan:
                        #TODO:不要なonlyがあるので後で変更
                        $ref: '#/components/schemas/Plan'
                      room_type:
                        nullable: true
                        type: object
                        properties:
                          room_type_name:
                            type: string
                          min_capacity:
                            type: integer
                          max_capacity:
                            type: integer
                          room_size:
                            type: integer
                          facilities:
                            type: array
                            items:
                              type: string
                          room_category_type_name:
                            type: string
                      user:
                        $ref: '#/definitions/UserForPlan'
              example:
                message: 'Get completed.'
                data:
                  plan:
                    plan_id: 3
                    plan_name: お得なプラン
                    room_bill: 6000
                    min_head_count: 1
                    max_head_count: 9
                    min_term: 1
                    max_term: 9
                  room_type:
                    room_type_name: スタンダードツイン
                    min_capacity: ツイン
                    max_capacity: 1
                    room_size: 2
                    facilities: 18
                    room_category_type_name: ['ユニット式バス・トイレ', '独立洗面台']
                  user:
                    username: 松本さくら
                    tel: null
                    email: sakura@example.com
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: Only users of the membership rank specified in the plan can access the system.
  /auth:
    post:
      summary: ユーザーを作成し、ログイン状態に必要なaccess-tokenとclientとuidを返します
      tags:
      - Auth
      - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
              email: test9@example.com
              password: password
              username: TestUser
              rank: normal
              address: HOGE県
              tel: '00000000000'
              gender: 9
              birthday: '1989/12/30'
              notification: true
      responses:
        '201':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: Create completed.
        '403':
          description: アクセス不可
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: Cannot sign on why you are already signed in.
        '422':
          description: 登録失敗
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: string
              example:
                message: Please submit proper sign up data in request body.
                errors: []
  /reserve:
    post:
      summary: 宿泊予約を仮登録します
      tags:
      - Reserve
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                plan_id:
                  type: integer
                total_bill:
                  type: integer
                date:
                  type: string
                term:
                  type: string
                head_count:
                  type: string
                breakfast:
                  type: boolean
                early_check_in:
                  type: boolean
                sightseeing:
                  type: boolean
                username:
                  type: string
                contact:
                  type: string
                comment:
                  nullable: true
                  type: string
                tel:
                  nullable: true
                  type: string
                email:
                  nullable: true
                  type: string
            example:
              plan_id: 0
              total_bill: 11750
              date: 'YYYY/MM/DD(明日以降日付を指定)'
              term: '1'
              head_count: '1'
              breakfast: true
              early_check_in: true
              sightseeing: true
              username: テスト太郎
              contact: email
              comment: comment_test
              email: example@example.com
      responses:
        '201':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      total_bill:
                        type: integer
                      term:
                        type: integer
                      head_count:
                        type: integer
                      username:
                        type: string
                      breakfast:
                        type: boolean
                      early_check_in:
                        type: boolean
                      sightseeing:
                        type: boolean
                      contact:
                        type: string
                      email:
                        nullable: true
                        type: string
                      tel:
                        nullable: true
                        type: string
                      comment:
                        type: string
                      session_token:
                        type: string
                      plan_name:
                        type: string
                      reserve_id:
                        type: integer
                      start_date:
                        type: string
                      end_date:
                        type: string
              example:
                message: Create completed.
                data:
                  reserve_id: 692
                  total_bill: 13625
                  term: 1
                  head_count: 1
                  username: テスト太郎
                  breakfast: true
                  early_check_in: true
                  sightseeing: true
                  contact: email
                  email: example@example.com
                  tel:
                  comment: comment_test
                  session_token: 8677lh607OzRID1UjFIiNg==
                  plan_name: ディナー付きプラン
                  start_date: 2023/01/08
                  end_date: 2023/01/09
        '400':
          description: リクエストのパラメータが不正
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: string
              example:
                message: Input value is invalid.
                errors:
                - Contact is not included in the list
        '401':
          description: 認証エラー
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: Only users of the membership rank specified in the plan can access the system.
  /reserve/{reserve_id}:
    put:
      summary: 宿泊予約を本登録します
      tags:
      - Reserve
      parameters:
      - name: reserve_id
        in: path
        required: true
        schema:
          type: integer
        example: 694
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                session_token:
                  type: string
            example:
              session_token: Iqbv4l0nj7/1gt2OwzdPMw==
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: Update completed.
        '400':
          description: リクエストのパラメータが不正
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items: {}
              example:
                message: Session token does not match.
                errors: []
        '404':
          description: 指定したデータが非存在
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: Not found.
        '409':
          description: リクエストしたデータが現在の状態と競合
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: Already completed reservation registration.
  /auth/sign_out:
    delete:
      summary: ログアウト(サインアウト)し、ログイン情報(access-tokenとclientとuid)を無効化します
      tags:
      - Auth
      security:
      - client: []
        access-token: []
        uid: []
      responses:
        '204':
          description: 成功
        '404':
          description: 指定されたデータが非存在
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: User was not found or was not logged in.
